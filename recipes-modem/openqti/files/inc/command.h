/* SPDX-License-Identifier: MIT */

#ifndef _COMMAND_H_
#define _COMMAND_H_
#include "chat_helpers.h"
#include "helpers.h"

#include <stdbool.h>
#include <stdint.h>
#include <sys/types.h>

enum {
  CMD_CATEGORY_INFO,
  CMD_CATEGORY_HELP,
  CMD_CATEGORY_LOGGING,
  CMD_CATEGORY_CALLS,
  CMD_CATEGORY_NETWORK,
  CMD_CATEGORY_UTILITY,
  CMD_CATEGORY_SYSTEM,
};

static const struct {
  uint8_t category;
  const char *name;
} cmd_categories[] = {
    {CMD_CATEGORY_INFO, "Info"},       {CMD_CATEGORY_HELP, "Help"},
    {CMD_CATEGORY_LOGGING, "Logging"}, {CMD_CATEGORY_CALLS, "Calls"},
    {CMD_CATEGORY_NETWORK, "Network"}, {CMD_CATEGORY_UTILITY, "Utilities"},
    {CMD_CATEGORY_SYSTEM, "System"},
};

static const struct {
  unsigned int id;
  uint8_t is_partial;
  uint8_t category;
  const char *cmd;
  const char *cmd_text;
  const char *help;
} bot_commands[] = {
    {CMD_ID_GET_NAME, 0, CMD_CATEGORY_INFO, "name", "My name is ",
     "Get Modem's name"},
    {CMD_ID_GET_UPTIME, 0, CMD_CATEGORY_INFO, "uptime",
     "This is my uptime:", "Get current uptime"},
    {CMD_ID_GET_LOADAVG, 0, CMD_CATEGORY_INFO, "load",
     "Load avg is:", "Get load average"},
    {CMD_ID_GET_VERSION, 0, CMD_CATEGORY_INFO, "version",
     "Current version:", "Get firmware version"},
    {CMD_ID_GET_USB_SUSPEND_STATE, 0, CMD_CATEGORY_INFO, "usbsuspend",
     "USB suspend state:", "Get USB suspend state"},
    {CMD_ID_GET_MEM, 0, CMD_CATEGORY_INFO, "memory",
     "Memory stats:", "Get memory stats"},
    {CMD_ID_GET_NET_STATS, 0, CMD_CATEGORY_INFO, "net stats",
     "Net stats:", "Get RMNET control stats"},
    {CMD_ID_GET_GPS_STATS, 0, CMD_CATEGORY_INFO, "gps stats",
     "GPS stats:", "Get GPS ports status"},
    {CMD_ID_GET_HELP, 0, CMD_CATEGORY_INFO, "help", "Help",
     "Show this message"},
    {CMD_ID_SET_USB_SUSPEND_BLOCK, 0, CMD_CATEGORY_SYSTEM, "caffeinate",
     "Blocking USB suspend until reboot or until you tell me otherwise!",
     "Block USB suspend"},
    {CMD_ID_SET_USB_SUSPEND_ALLOW, 0, CMD_CATEGORY_SYSTEM, "decaf",
     "Allowing USB to suspend again", "Allow USB suspend"},
    {CMD_ID_SET_ADB_ON, 0, CMD_CATEGORY_SYSTEM, "enable adb", "Enabling ADB.",
     "Turn ON adb (USB will reset)"},
    {CMD_ID_SET_ADB_OFF, 0, CMD_CATEGORY_SYSTEM, "disable adb",
     "Disabling ADB.", "Turn OFF adb (USB will reset)"},
    {CMD_ID_GET_HISTORY, 0, CMD_CATEGORY_LOGGING, "get history",
     "Get command history", "Show command history"},
    {CMD_ID_GET_LOG, 0, CMD_CATEGORY_LOGGING, "get log",
     "Openqti.log:", "Dump OpenQTI log"},
    {CMD_ID_GET_KERNEL_LOG, 0, CMD_CATEGORY_LOGGING, "get dmesg",
     "Kernel log:", "Dump kernel log"},
    {CMD_ID_GET_RECONNECTS, 0, CMD_CATEGORY_INFO, "get reconnects",
     "Number of resets since last boot",
     "Show number of reconnects since boot"},
    {CMD_ID_ACTION_CALL_OWNER, 0, CMD_CATEGORY_UTILITY, "call me",
     "Calling you now!", "Generate an incoming call"},
    {CMD_ID_GET_OWNER_NAME, 0, CMD_CATEGORY_INFO, "username", "Your name is ",
     "Show you your name"},
    {CMD_ID_ACTION_POWEROFF, 0, CMD_CATEGORY_SYSTEM, "off", "Goodbye",
     "Shutdown the modem"},
    {CMD_ID_GET_GSM_SIGNAL, 0, CMD_CATEGORY_NETWORK, "gsm signal",
     "RF Signal status:", "Show network and signal data"},
    {CMD_ID_ACTION_REBOOT, 0, CMD_CATEGORY_SYSTEM, "reboot", "See you soon",
     "Reboot the modem"},
    {CMD_ID_GET_NET_REPORT, 0, CMD_CATEGORY_NETWORK, "net report",
     "Network report", "Get network report "},
    {CMD_ID_ACTION_ENABLE_SIGNAL_TRACKING, 0, CMD_CATEGORY_NETWORK,
     "enable tracking", "Signal tracking: enabled",
     "Switch on network monitoring"},
    {CMD_ID_ACTION_DISABLE_SIGNAL_TRACKING, 0, CMD_CATEGORY_NETWORK,
     "disable tracking", "Signal tracking: disabled",
     "Switch off network monitoring"},
    {CMD_ID_ACTION_ENABLE_PERSISTENT_LOGGING, 0, CMD_CATEGORY_SYSTEM,
     "enable persistent logging", "Persistent logging: enabled",
     "Switch on persistent logging"},
    {CMD_ID_ACTION_DISABLE_PERSISTENT_LOGGING, 0, CMD_CATEGORY_SYSTEM,
     "disable persistent logging", "Persistent logging: disabled",
     "Switch off persistent logging"},
    {CMD_ID_ACTION_ENABLE_SMS_LOGGING, 0, CMD_CATEGORY_LOGGING,
     "enable sms logging", "Enabling SMS logging",
     "Store all incoming/outgoing messages to a log"},
    {CMD_ID_ACTION_DISABLE_SMS_LOGGING, 0, CMD_CATEGORY_LOGGING,
     "disable sms logging", "Disabling SMS logging",
     "Disables logging of all incoming/outgoing messages"},
    {CMD_ID_UTIL_LIST_ACTIVE_TASKS, 0, CMD_CATEGORY_UTILITY, "list tasks",
     "Show pending tasks", "Shows all the scheduled tasks"},
    {CMD_ID_GET_FW_TY, 0, CMD_CATEGORY_INFO, "thank you", "",
     "Thank you to all of you who help shape this firmware"},
    {CMD_ID_ACTION_ENABLE_CELL_BROADCAST, 0, CMD_CATEGORY_NETWORK,
     "enable cell broadcast", "Enabling Cell broadcasting for index 0-6000...",
     "Enables Cell broadcasting messages"},
    {CMD_ID_ACTION_DISABLE_CELL_BROADCAST, 0, CMD_CATEGORY_NETWORK,
     "disable cell broadcast", "Disabling cell broadcast...",
     "Disables Cell broadcasting messages"},
    {CMD_ID_ACTION_CALLWAIT_AUTO_HANGUP, 0, CMD_CATEGORY_CALLS,
     "callwait auto hangup",
     "I will automatically terminate all incoming calls while you're talking",
     "Automatically kills any new incoming call while you're talking"},
    {CMD_ID_ACTION_CALLWAIT_AUTO_IGNORE, 0, CMD_CATEGORY_CALLS,
     "callwait auto ignore",
     "I will just inform you that there's a new call waiting",
     "Automatically ignores any new incoming call while you're talking"},
    {CMD_ID_ACTION_CALLWAIT_MODE_DEFAULT, 0, CMD_CATEGORY_CALLS,
     "callwait mode default", "I will let the host handle multiple calls",
     "Disables automatic hang up of incoming calls while you're talking"},
    {CMD_ID_ACTION_ENABLE_CAT, 0, CMD_CATEGORY_CALLS,
     "enable custom alert tone", "Enabling custom alert tone",
     "Enables custom alerting tone"},
    {CMD_ID_ACTION_DISABLE_CAT, 0, CMD_CATEGORY_CALLS,
     "disable custom alert tone", "Using alerting tone from the carrier",
     "Uses the default alerting tone from the carrier if it provides one"},
    {CMD_ID_ACTION_RECORD_CALLS_AND_RECYCLE, 0, CMD_CATEGORY_CALLS,
     "record and recycle calls",
     "I will record all your calls and wipe them unless you tell me to keep "
     "them during the call ",
     "Enable call recording and autoerase (send 'record this call' to keep "
     "it)"},
    {CMD_ID_ACTION_RECORD_CALLS_ALL, 0, CMD_CATEGORY_CALLS, "record all calls",
     "I will record all calls from now on",
     "Enables call recording for all calls (retrieve them via adb)"},
    {CMD_ID_ACTION_RECORD_CALLS_NONE, 0, CMD_CATEGORY_CALLS,
     "stop recording calls", "Automatic call recording is disabled",
     "Disables automatic call recording"},
    {CMD_ID_ACTION_RECORD_CALL_CURRENT, 0, CMD_CATEGORY_CALLS,
     "record this call", "I got this", "Records current established call"},
    {CMD_ID_ACTION_RECORD_CALL_NEXT, 0, CMD_CATEGORY_CALLS, "record next call",
     "I will record the new call you make or receive",
     "Automatically records the next established call"},
    {CMD_ID_ACTION_RECORD_CALL_CANCEL_TASK, 0, CMD_CATEGORY_CALLS,
     "cancel record next call",
     "I won't record the new call you make or receive",
     "Cancel automatic recording of next call"},
    {CMD_ID_DEBUG_GET_MM_SAMPLE_GSM7_CB_MSG, 0, CMD_CATEGORY_LOGGING, "dbg",
     "Sending sample CB messages...", "Send demo cell broadcast message"},
    {CMD_ID_DEBUG_GET_MM_SAMPLE_UCS2_CB_MSG, 0, CMD_CATEGORY_LOGGING, "dbgucs",
     "Sending sample CB UCS-2 messages...", "Send demo cell broadcast message"},
    {CMD_ID_ACTION_ENABLE_INTERNAL_NETWORKING, 0, CMD_CATEGORY_NETWORK,
     "enable internal net", "Warning: this function is in testing. Reboot to apply changes. Send 'disable internal net' to revert",
     "Attempts to init modem's internal RMNET port"},
    {CMD_ID_ACTION_DISABLE_INTERNAL_NETWORKING, 0, CMD_CATEGORY_NETWORK,
     "disable internal net", "Please reboot to apply changes",
     "Attempts to init modem's internal RMNET port"},
    {CMD_ID_ACTION_DISABLE_DO_NOT_DISTURB, 0, CMD_CATEGORY_CALLS, "disable dnd",
     "Disabling Do Not Disturb", "Disables Do Not Disturb feature"},
    {CMD_ID_ACTION_DEBUG_DISABLE_SVC, 0, CMD_CATEGORY_LOGGING,
     "disable service debugging", "Done boss!",
     "Disables extensive logging for a defined service"},
    {CMD_ID_GET_KNOWN_QMI_SERVICES, 0, CMD_CATEGORY_LOGGING,
     "list qmi services", "Available QMI services:",
     "Shows QMI Service IDs (for service debugging)"},
    {CMD_ID_ACTION_DEBUG_ENABLE_NETWORK_DATA_DUMP, 0, CMD_CATEGORY_LOGGING,
     "dump network data", "Enabling network data logging",
     "Dumps network data given by the baseband as CSV files"},
    {CMD_ID_ACTION_DEBUG_DISABLE_NETWORK_DATA_DUMP, 0, CMD_CATEGORY_LOGGING,
     "disable network data dump", "Disabling network data logging",
     "Disables network data dump to CSV"},
    {CMD_ID_ACTION_ENABLE_ST_NETWORK_DOWNGRADE_NOTIF, 0, CMD_CATEGORY_NETWORK,
     "enable network downgrade notification",
     "I will notify you if network type gets downgraded",
     "Sends a SMS when the network changes (ie from LTE to WCDMA)"},
    {CMD_ID_ACTION_DISABLE_ST_NETWORK_DOWNGRADE_NOTIF, 0, CMD_CATEGORY_NETWORK,
     "disable network downgrade notification",
     "I won't notify when network type gets downgraded",
     "Disables service downgrade notifications"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_CLEAR_AUTH_DATA, 0, CMD_CATEGORY_NETWORK,
     "clear internal network auth",
     "Removing internal networking authentication config",
     "Resets internal networking user,pass and method"},
    {CMD_ID_ACTION_MESSAGE_RECOVERY_ENABLE, 0, CMD_CATEGORY_UTILITY,
     "enable message recovery",
     "Will try to retrieve any stuck messages on next boot",
     "Enables MM bypass of List All messages to retrieve stuck SMS"},
    {CMD_ID_ACTION_MESSAGE_RECOVERY_DISABLE, 0, CMD_CATEGORY_UTILITY,
     "disable message recovery",
     "Will stop hijacking ModemManager's List All Messages",
     "Disables MM bypass of List All messages to retrieve stuck SMS"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_START, 0, CMD_CATEGORY_NETWORK, "ifup",
     "Trying to kickstart internal networking",
     "Attempts to start a data session from the modem's userspace"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_STOP, 0, CMD_CATEGORY_NETWORK, "ifdown",
     "Stopping internal networking ",
     "Stops an active data session on the modem's userspace"},
    {CMD_ID_SET_MODEM_NAME, 1, CMD_CATEGORY_SYSTEM, "set name ",
     "Set Modem Name", "Set a new name for the modem"},
    {CMD_ID_SET_OWNER_NAME, 1, CMD_CATEGORY_SYSTEM, "set user name ",
     "Set User Name", "Set new username"},
    {CMD_ID_ACTION_CALL_OWNER_COUNTDOWN, 1, CMD_CATEGORY_UTILITY, "call me in ",
     "Calling you back in ", "Call me in X seconds"},
    {CMD_ID_ACTION_SET_REMINDER, 1, CMD_CATEGORY_UTILITY, "remind me ",
     "Will call you ", "Call you [at/in] hh[:xx min] [text]"},
    {CMD_ID_ACTION_WAKE_OWNER, 1, CMD_CATEGORY_UTILITY, "wake me up ",
     "Will wake you up ", "Wake you up [at/in] hh[:xx min]"},
    {CMD_ID_ACTION_DELETE_TASK, 1, CMD_CATEGORY_UTILITY, "delete task ",
     "Removing task ", "delete task X: Removes task X from the scheduler"},
    {CMD_ID_ACTION_ENABLE_DND, 1, CMD_CATEGORY_CALLS, "enable dnd for ",
     "Silencing calls for  ",
     "enable dnd for X [hours:minutes]: Ignores incoming calls (will send you "
     "an sms with the number who called) "},
    {CMD_ID_DEBUG_ENABLE_SERVICE_LOGGING, 1, CMD_CATEGORY_LOGGING,
     "enable debugging of service ", "Enabling debugging of service ",
     "Enables extensive logging of a defined QMI service"},
    {CMD_ID_ACTION_SET_ST_MODE, 1, CMD_CATEGORY_NETWORK,
     "signal tracking mode ", "Set signal tracking mode",
     "Set the paranoia level for signal tracking functions"},
    {CMD_ID_ACTION_SET_ST_NOTIFICATION_LEVEL, 1, CMD_CATEGORY_NETWORK,
     "signal tracking cell notifications ", "Signal tracking notification",
     "Signal tracking: cell change notification (options: none, new, all "
     "-don't notify,notify on new cells only,notify everything all the time)"},
    {CMD_ID_DEFINE, 1, CMD_CATEGORY_UTILITY, "define ", "Definition fo X",
     "define X: Looks up definition for a given word"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_SET_APN, 1, CMD_CATEGORY_NETWORK,
     "set internal network apn ", "Set internal apn name ",
     "Configure your carrier APN for use in internal networking"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_SET_USER, 1, CMD_CATEGORY_NETWORK,
     "set internal network user ", "Set internal apn user ",
     "Configure your carrier APN username for use in internal networking"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_SET_PASS, 1, CMD_CATEGORY_NETWORK,
     "set internal network pass ", "Set internal apn pass ",
     "Configure your carrier APN password for use in internal networking"},
    {CMD_ID_ACTION_INTERNAL_NETWORK_SET_AUTH_METHOD, 1, CMD_CATEGORY_NETWORK,
     "set internal network auth method ", "Set internal apn auth method ",
     "Configure your carrier APN authentication method (options: none, pap, "
     "chap, auto)"},
     {CMD_ID_ACTION_SAY_TEXT, 1, CMD_CATEGORY_UTILITY, "say ",
     "Say X", "Responds with X. If calling the modem, responds via Text To Speech"},
};

char *get_rt_modem_name();
char *get_rt_user_name();
void get_names();
void set_cmd_runtime_defaults();
uint8_t parse_command(uint8_t *command);

#endif
